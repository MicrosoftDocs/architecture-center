{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "spClientId": {
      "type": "string",
      "metadata": {
        "description": "Service Principal Client ID used by Jenkins and Azure Container Service (AKS)."
      }
    },
    "spClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Service Principal Client Secret used by Jenkins and Azure Container Service(AKS)."
      }
    },
    "linuxAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Linux VMs (Jenkins and Kubernetes)."
      }
    },
    "linuxAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Jenkins and Grafana VMs. Password authentication disabled in favor of SSH public key authentication."
      }
    },
    "linuxSSHPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all Linux VMs with the SSH RSA public key string. Copy the content of your public key, such as ~/.ssh/id_rsa.pub"
      }
    }
  },
  "variables": {
    "cosmosDbName": "[concat('cosmosdb', uniqueString(resourceGroup().id))]",
    "jenkinsVMName": "jenkins",
    "grafanaVMName": "grafana",
    "acrName": "[concat('acr', uniqueString(resourceGroup().id))]",
    "jenkinsDnsPrefix": "[concat('jenkins', uniqueString(resourceGroup().id))]",
    "grafanaDnsPrefix": "[concat('grafana', uniqueString(resourceGroup().id))]",
    "kubernetesDnsPrefix": "[concat('kubernetes', uniqueString(resourceGroup().id))]",
    "kubernetesClusterName": "[concat('aks', uniqueString(resourceGroup().id))]",
    "kubernetesVersion": "1.8.1",
    "kubernetesAgentCount": 2,
    "kubernetesAgentVMSize": "Standard_DS2_v2",
    "gitRepository": "https://github.com/iainfoulds/devops-jenkins-aks",
    "_artifactsLocation": "https://raw.githubusercontent.com/iainfoulds/architecture-center/aks-devops/docs/sample-solutions/app-modernization/templates/devops-with-aks/",
    "_artifactsLocationSasToken": "",
    "location": "[resourceGroup().location]",
    "virtualNetworkName": "virtual-network",
    "subnetName": "default-subnet"
  },
  "resources": [
    {
      "name": "[variables('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "location": "[variables('location')]",
      "apiVersion": "2017-10-01",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "apiVersion": "2015-04-08",
      "kind": "MongoDB",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[variables('cosmosDbName')]",
      "location": "[variables('location')]",
      "properties": {
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "jenkinsDeployment",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDbName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), 'nested/jenkins.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "jenkinsVMName": {
            "value": "[variables('jenkinsVMName')]"
          },
          "spClientId": {
            "value": "[parameters('spClientId')]"
          },
          "spClientSecret": {
            "value": "[parameters('spClientSecret')]"
          },
          "linuxAdminUsername": {
            "value": "[parameters('linuxAdminUsername')]"
          },
          "linuxAdminPassword": {
            "value": "[parameters('linuxAdminPassword')]"
          },
          "linuxSSHPublicKey": {
            "value": "[parameters('linuxSSHPublicKey')]"
          },
          "dnsPrefix": {
            "value": "[variables('jenkinsDnsPrefix')]"
          },
          "subnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
          },
          "gitRepository": {
            "value": "[variables('gitRepository')]"
          },
          "acrServer": {
            "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))).loginServer]"
          },
          "acrUsername": {
            "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName')), '2017-10-01').username]"
          },
          "acrPassword": {
            "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName')), '2017-10-01').passwords[0].value]"
          },
          "mongoDbURI": {
            "value": "[concat('mongodb://', variables('cosmosDbName'), ':', uriComponent(listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDbName')), '2015-04-08').primaryMasterKey), '@', variables('cosmosDbName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]"
          },
          "kubernetesResourceGroupName": {
            "value": "[resourceGroup().name]"
          },
          "kubernetesClusterName": {
            "value": "[variables('kubernetesClusterName')]"
          },
          "_artifactsLocation": {
            "value": "[variables('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[variables('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "eastus",
      "name": "[variables('kubernetesClusterName')]",
      "properties": {
        "kubernetesVersion": "[variables('kubernetesVersion')]",
        "dnsPrefix": "[variables('kubernetesDnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": 0,
            "count": "[variables('kubernetesAgentCount')]",
            "vmSize": "[variables('kubernetesAgentVMSize')]",
            "osType": "Linux",
            "storageProfile": "ManagedDisks"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('linuxSSHPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "ClientId": "[parameters('spClientId')]",
          "Secret": "[parameters('spClientSecret')]"
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "grafanaDeployment",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDbName'))]",
        "[resourceId('Microsoft.ContainerService/managedClusters', variables('kubernetesClusterName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), 'nested/grafana.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "grafanaVMName": {
            "value": "[variables('grafanaVMName')]"
          },
          "spClientId": {
            "value": "[parameters('spClientId')]"
          },
          "spClientSecret": {
            "value": "[parameters('spClientSecret')]"
          },
          "linuxAdminUsername": {
            "value": "[parameters('linuxAdminUsername')]"
          },
          "linuxAdminPassword": {
            "value": "[parameters('linuxAdminPassword')]"
          },
          "linuxSSHPublicKey": {
            "value": "[parameters('linuxSSHPublicKey')]"
          },
          "dnsPrefix": {
            "value": "[variables('grafanaDnsPrefix')]"
          },
          "subnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
          },
          "cosmosDbName": {
            "value": "[variables('cosmosDbName')]"
          },
          "kubernetesClusterName": {
            "value": "[variables('kubernetesClusterName')]"
          },
          "_artifactsLocation": {
            "value": "[variables('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[variables('_artifactsLocationSasToken')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "jenkinsURL": {
      "type": "string",
      "value": "[reference('jenkinsDeployment').outputs.jenkinsURL.value]"
    },
    "jenkinsSSH": {
      "type": "string",
      "value": "[reference('jenkinsDeployment').outputs.jenkinsSSH.value]"
    },
    "azureContainerRegistryUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))).loginServer]"
    },
    "kubernetesControlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', variables('kubernetesClusterName'))).fqdn]"
    },
    "grafanaUrl": {
      "type": "string",
      "value": "[reference('grafanaDeployment').outputs.grafanaURL.value]"
    }
  }
}
